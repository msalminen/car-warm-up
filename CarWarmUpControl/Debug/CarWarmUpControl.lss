
CarWarmUpControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000086  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006b4  00000000  00000000  000000dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000818  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000402  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000012b  00000000  00000000  00000c9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000344  00000000  00000000  00000dc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  0000110c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000105  00000000  00000000  00001140  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0b c0       	rjmp	.+22     	; 0x18 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>

00000018 <__ctors_end>:
  18:	11 24       	eor	r1, r1
  1a:	1f be       	out	0x3f, r1	; 63
  1c:	cf ed       	ldi	r28, 0xDF	; 223
  1e:	cd bf       	out	0x3d, r28	; 61

00000020 <__do_copy_data>:
  20:	10 e0       	ldi	r17, 0x00	; 0
  22:	a0 e6       	ldi	r26, 0x60	; 96
  24:	b0 e0       	ldi	r27, 0x00	; 0
  26:	e6 e8       	ldi	r30, 0x86	; 134
  28:	f0 e0       	ldi	r31, 0x00	; 0
  2a:	03 c0       	rjmp	.+6      	; 0x32 <__do_copy_data+0x12>
  2c:	c8 95       	lpm
  2e:	31 96       	adiw	r30, 0x01	; 1
  30:	0d 92       	st	X+, r0
  32:	a0 36       	cpi	r26, 0x60	; 96
  34:	b1 07       	cpc	r27, r17
  36:	d1 f7       	brne	.-12     	; 0x2c <__do_copy_data+0xc>

00000038 <__do_clear_bss>:
  38:	10 e0       	ldi	r17, 0x00	; 0
  3a:	a0 e6       	ldi	r26, 0x60	; 96
  3c:	b0 e0       	ldi	r27, 0x00	; 0
  3e:	01 c0       	rjmp	.+2      	; 0x42 <.do_clear_bss_start>

00000040 <.do_clear_bss_loop>:
  40:	1d 92       	st	X+, r1

00000042 <.do_clear_bss_start>:
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	e1 f7       	brne	.-8      	; 0x40 <.do_clear_bss_loop>
  48:	06 d0       	rcall	.+12     	; 0x56 <main>
  4a:	1b c0       	rjmp	.+54     	; 0x82 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <ioinit>:
#define BUTTON1_LED PA1 // Define button1 led pin
#define BUTTON1		PB0	// Define button1 pin

void ioinit()
{
	DDRA |= (1 << RELAY1);		// Set output direction on RELAY
  4e:	d4 9a       	sbi	0x1a, 4	; 26
	DDRA |= (1 << BUTTON1_LED); // Set output direction on BUTTON1_LED
  50:	d1 9a       	sbi	0x1a, 1	; 26
	DDRA &= ~(1 << BUTTON1);	// Set input direction on BUTTON1
  52:	d0 98       	cbi	0x1a, 0	; 26
}
  54:	08 95       	ret

00000056 <main>:

int main(void)
{
	ioinit();
  56:	fb df       	rcall	.-10     	; 0x4e <ioinit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  58:	8f e7       	ldi	r24, 0x7F	; 127
  5a:	9a e1       	ldi	r25, 0x1A	; 26
  5c:	a6 e0       	ldi	r26, 0x06	; 6
  5e:	81 50       	subi	r24, 0x01	; 1
  60:	90 40       	sbci	r25, 0x00	; 0
  62:	a0 40       	sbci	r26, 0x00	; 0
  64:	e1 f7       	brne	.-8      	; 0x5e <main+0x8>
  66:	00 c0       	rjmp	.+0      	; 0x68 <main+0x12>
  68:	00 00       	nop

	while(1)
	{
		_delay_ms(2000);
		PORTA &= ~(1 << BUTTON1_LED); // Set 0 on RELAY pin (RELAY turn ON)
  6a:	d9 98       	cbi	0x1b, 1	; 27
  6c:	8f e3       	ldi	r24, 0x3F	; 63
  6e:	92 e4       	ldi	r25, 0x42	; 66
  70:	af e0       	ldi	r26, 0x0F	; 15
  72:	81 50       	subi	r24, 0x01	; 1
  74:	90 40       	sbci	r25, 0x00	; 0
  76:	a0 40       	sbci	r26, 0x00	; 0
  78:	e1 f7       	brne	.-8      	; 0x72 <main+0x1c>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <main+0x26>
  7c:	00 00       	nop
		_delay_ms(5000);
		PORTA |= (1 << BUTTON1_LED); // Set 1 on RELAY pin (RELAY turn OFF)
  7e:	d9 9a       	sbi	0x1b, 1	; 27
  80:	eb cf       	rjmp	.-42     	; 0x58 <main+0x2>

00000082 <_exit>:
  82:	f8 94       	cli

00000084 <__stop_program>:
  84:	ff cf       	rjmp	.-2      	; 0x84 <__stop_program>
